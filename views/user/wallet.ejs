
<%- include("../../views/partials/user/header") %>
<%- include("../../views/partials/user/header1") %>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Wallet</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    
    <style>
        :root {
            --primary-peach: #F5E6D3;
            --secondary-peach: #F0D7C7;
            --accent-peach: #E8B4A0;
            --dark-peach: #D4A484;
            --deep-peach: #C8956D;
            --gradient-peach: linear-gradient(135deg, #F5E6D3 0%, #F0D7C7 50%, #E8B4A0 100%);
            --gradient-accent: linear-gradient(135deg, #E8B4A0 0%, #D4A484 50%, #C8956D 100%);
            --gradient-subtle: linear-gradient(135deg, #FAF6F2 0%, #F5E6D3 100%);
            --text-primary: #3A2F2A;
            --text-secondary: #6B5B54;
            --text-light: #9B8B82;
            --white: #FFFFFF;
            --light-gray: #FAF6F2;
            --border-light: #E8DDD4;
            --shadow-light: rgba(196, 149, 109, 0.08);
            --shadow-medium: rgba(196, 149, 109, 0.15);
            --shadow-hover: rgba(212, 164, 132, 0.2);
            --shadow-peach: rgba(232, 180, 160, 0.25);
        }
        
        * {
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
            color: var(--text-primary);
            background: #FAFAFA;
            line-height: 1.6;
            margin: 0;
            padding: 0;
        }
        
        .main {
            min-height: 100vh;
            padding-bottom: 40px;
        }
        
        /* Breadcrumb Styling */
        .breadcrumb-wrap {
            background: var(--gradient-peach);
            padding: 20px 0;
            border-bottom: 1px solid var(--border-light);
            margin-bottom: 0 !important;
            position: relative;
            overflow: hidden;
        }
        
        .breadcrumb-wrap::before {
            content: '';
            position: absolute;
            top: 0;
            right: 0;
            width: 200px;
            height: 100%;
            background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.3));
            transform: skewX(-15deg);
        }
        
        .breadcrumb {
            margin-bottom: 0;
            font-size: 14px;
            font-weight: 500;
            background: none;
            padding: 0;
        }
        
        .breadcrumb a {
            color: var(--text-primary);
            text-decoration: none;
            transition: all 0.3s ease;
            position: relative;
        }
        
        .breadcrumb a:hover {
            color: var(--deep-peach);
            transform: translateY(-1px);
        }
        
        .breadcrumb a::after {
            content: '';
            position: absolute;
            bottom: -2px;
            left: 0;
            width: 0;
            height: 2px;
            background: var(--deep-peach);
            transition: width 0.3s ease;
        }
        
        .breadcrumb a:hover::after {
            width: 100%;
        }
        
        .breadcrumb span {
            padding: 0 12px;
            color: var(--text-light);
        }
        
        /* Dashboard Menu */
        .dashboard-menu {
            background: var(--white);
            border-radius: 16px;
            box-shadow: 0 8px 32px var(--shadow-light);
            margin-bottom: 30px;
            overflow: hidden;
            border: 1px solid var(--border-light);
            position: relative;
        }
        
        .dashboard-menu::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: var(--gradient-accent);
        }
        
        .dashboard-menu .nav-link {
            color: var(--text-primary);
            padding: 18px 24px;
            border: none;
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            font-weight: 500;
            display: flex;
            align-items: center;
            position: relative;
            border-bottom: 1px solid rgba(226, 232, 240, 0.5);
        }
        
        .dashboard-menu .nav-link:last-child {
            border-bottom: none;
        }
        
        .dashboard-menu .nav-link::before {
            content: '';
            position: absolute;
            left: 0;
            top: 0;
            bottom: 0;
            width: 0;
            background: var(--gradient-accent);
            transition: width 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        }
        
        .dashboard-menu .nav-link i {
            margin-right: 16px;
            width: 20px;
            text-align: center;
            font-size: 18px;
            transition: all 0.3s ease;
        }
        
        .dashboard-menu .nav-link:hover {
            background: var(--gradient-subtle);
            color: var(--text-primary);
            transform: translateX(8px);
            box-shadow: 0 4px 20px var(--shadow-peach);
        }
        
        .dashboard-menu .nav-link:hover::before {
            width: 4px;
        }
        
        .dashboard-menu .nav-link:hover i {
            color: var(--deep-peach);
            transform: scale(1.1);
        }
        
        .dashboard-menu .nav-link.active {
            background: var(--gradient-peach);
            color: var(--text-primary);
            font-weight: 600;
        }
        
        .dashboard-menu .nav-link.active::before {
            width: 4px;
        }
        
        .dashboard-menu .nav-link.active i {
            color: var(--deep-peach);
        }
        
        /* Card Styling */
        .card {
            border: none;
            border-radius: 20px;
            box-shadow: 0 12px 40px var(--shadow-light);
            margin-bottom: 30px;
            overflow: hidden;
            background: var(--white);
            transition: all 0.3s ease;
            position: relative;
        }
        
        .card:hover {
            transform: translateY(-4px);
            box-shadow: 0 20px 60px var(--shadow-medium);
        }
        
        .card-green::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 6px;
            background: var(--gradient-accent);
        }
        
        .card-header {
            background: var(--gradient-peach);
            border-bottom: 1px solid var(--border-light);
            padding: 24px 32px;
            position: relative;
        }
        
        .card-header::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 60px;
            height: 3px;
            background: var(--gradient-accent);
            border-radius: 2px;
        }
        
        .card-header h5 {
            margin: 0;
            font-weight: 600;
            font-size: 20px;
            color: var(--text-primary);
        }
        
        .card-body {
            padding: 40px 32px;
        }
        
        /* Wallet Info Items */
        .wallet-info-item {
            background: var(--white);
            padding: 24px;
            border-radius: 16px;
            height: 100%;
            border: 1px solid var(--border-light);
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            box-shadow: 0 4px 16px var(--shadow-light);
            text-align: center;
        }
        
        .wallet-info-item::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 4px;
            background: var(--gradient-accent);
            transform: scaleX(0);
            transition: transform 0.3s ease;
        }
        
        .wallet-info-item:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 32px var(--shadow-light);
        }
        
        .wallet-info-item:hover::before {
            transform: scaleX(1);
        }
        
        .wallet-info-item label {
            font-weight: 600;
            color: var(--text-secondary);
            margin-bottom: 8px;
            display: block;
            font-size: 13px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        .wallet-info-item p {
            font-size: 24px;
            font-weight: 700;
            color: var(--text-primary);
            margin: 0;
        }
        
        /* Buttons */
        .btn-success {
            background: var(--gradient-accent);
            border: none;
            padding: 12px 28px;
            border-radius: 12px;
            font-weight: 600;
            font-size: 14px;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            position: relative;
            overflow: hidden;
            color: var(--white);
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        .btn-success::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.5s ease;
        }
        
        .btn-success:hover {
            transform: translateY(-2px);
            box-shadow: 0 12px 32px var(--shadow-peach);
            background: var(--gradient-accent);
            border: none;
            color: var(--white);
        }
        
        .btn-success:hover::before {
            left: 100%;
        }
        
        .btn-success:active {
            transform: translateY(0);
        }
        
        /* Quick Amount Buttons */
        .quick-amount {
            display: inline-block;
            padding: 10px 20px;
            margin: 5px;
            border: 2px solid var(--deep-peach);
            border-radius: 6px;
            cursor: pointer;
            transition: all 0.3s ease;
            background: var(--white);
            color: var(--text-primary);
            font-weight: 500;
        }
        
        .quick-amount:hover {
            background: var(--gradient-accent);
            color: var(--white);
            transform: translateY(-2px);
        }
        
        /* Transaction History Container */
        .transaction-history-container {
            background: var(--white);
            border-radius: 16px;
            padding: 24px;
            margin-top: 30px;
            position: relative;
            box-shadow: 0 8px 32px var(--shadow-light);
            border: 1px solid var(--border-light);
            transition: all 0.3s ease;
        }
        
        .transaction-history-container::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: var(--gradient-accent);
        }
        
        .transaction-history-container:hover {
            transform: translateY(-4px);
            box-shadow: 0 12px 40px var(--shadow-medium);
        }
        
        .transaction-history-container h3 {
            font-size: 20px;
            font-weight: 600;
            color: var(--text-primary);
            margin-bottom: 20px;
        }
        
        /* Transaction Table */
        .table {
            margin-bottom: 0;
            border-collapse: separate;
            border-spacing: 0 8px;
        }
        
        .table th {
            font-weight: 600;
            color: var(--text-secondary);
            font-size: 13px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            padding: 12px 15px;
            border-bottom: 1px solid var(--border-light);
        }
        
        .table td {
            padding: 15px;
            vertical-align: middle;
            background: var(--white);
            border: 1px solid var(--border-light);
            border-left: none;
            border-right: none;
        }
        
        .table tr {
            transition: all 0.3s ease;
            position: relative;
        }
        
        .table tr::before {
            content: '';
            position: absolute;
            left: 0;
            top: 0;
            bottom: 0;
            width: 0;
            background: var(--gradient-accent);
            transition: width 0.3s ease;
        }
        
        .table tr:hover {
            background: var(--gradient-subtle);
            transform: translateY(-2px);
            box-shadow: 0 4px 16px var(--shadow-light);
        }
        
        .table tr:hover::before {
            width: 4px;
        }
        
        .transaction-status {
            padding: 6px 12px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: 500;
            text-transform: uppercase;
        }
        
        .status-credit {
            background: linear-gradient(135deg, #48bb78 0%, #2f855a 100%);
            color: var(--white);
        }
        
        .status-debit {
            background: linear-gradient(135deg, #f56565 0%, #c53030 100%);
            color: var(--white);
        }
        
        /* Pagination */
        .pagination .page-link {
            color: var(--text-primary);
            border: 1px solid var(--border-light);
            border-radius: 8px;
            margin: 0 4px;
            transition: all 0.3s ease;
        }
        
        .pagination .page-link:hover {
            background: var(--gradient-subtle);
            border-color: var(--deep-peach);
            color: var(--deep-peach);
        }
        
        .pagination .page-item.active .page-link {
            background: var(--gradient-accent);
            border-color: var(--deep-peach);
            color: var(--white);
        }
        
        .pagination .page-item.disabled .page-link {
            color: var(--text-light);
            border-color: var(--border-light);
        }
        
        /* Modal Styling */
        .modal-content {
            border-radius: 16px;
            border: none;
            box-shadow: 0 12px 40px var(--shadow-medium);
        }
        
        .modal-header {
            background: var(--gradient-peach);
            border-bottom: 1px solid var(--border-light);
            padding: 20px 24px;
            position: relative;
        }
        
        .modal-header::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 40px;
            height: 2px;
            background: var(--gradient-accent);
            border-radius: 2px;
        }
        
        .modal-header .modal-title {
            font-weight: 600;
            color: var(--text-primary);
        }
        
        .modal-body {
            padding: 24px;
        }
        
        .modal-footer {
            border-top: 1px solid var(--border-light);
            padding: 16px 24px;
        }
        
        .modal-footer .btn {
            border-radius: 8px;
            padding: 10px 20px;
            font-weight: 500;
        }
        
        .input-group-text {
            background: var(--gradient-subtle);
            border: 1px solid var(--border-light);
            color: var(--text-primary);
        }
        
        .form-control {
            border: 1px solid var(--border-light);
            border-radius: 8px;
            padding: 10px;
            transition: all 0.3s ease;
        }
        
        .form-control:focus {
            border-color: var(--deep-peach);
            box-shadow: 0 0 8px var(--shadow-peach);
        }
        
        /* Mobile Menu Toggle */
        .mobile-menu-toggle {
            display: none;
            background: var(--gradient-accent);
            color: var(--white);
            border: none;
            padding: 16px 24px;
            border-radius: 12px;
            margin-bottom: 20px;
            width: 100%;
            text-align: left;
            font-weight: 600;
            transition: all 0.3s ease;
            box-shadow: 0 4px 16px var(--shadow-light);
        }
        
        .mobile-menu-toggle:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 24px var(--shadow-medium);
        }
        
        /* Footer */
        footer {
            background: var(--white);
            padding: 32px 0;
            text-align: center;
            border-top: 1px solid var(--border-light);
            margin-top: 60px;
        }
        
        footer p {
            color: var(--text-light);
            margin: 0;
            font-weight: 400;
        }
        
        /* Responsive Design */
        @media (max-width: 991px) {
            .breadcrumb-wrap {
                margin-bottom: 20px !important;
            }
            
            .dashboard-menu {
                margin-bottom: 30px;
            }
            
            .card-body {
                padding: 30px 24px;
            }
        }
        
        @media (max-width: 767px) {
            .mobile-menu-toggle {
                display: flex;
                justify-content: space-between;
                align-items: center;
            }
            
            .dashboard-menu {
                display: none;
                margin-bottom: 20px;
            }
            
            .dashboard-menu.show {
                display: block;
                animation: slideDown 0.3s ease;
            }
            
            @keyframes slideDown {
                from {
                    opacity: 0;
                    transform: translateY(-10px);
                }
                to {
                    opacity: 1;
                    transform: translateY(0);
                }
            }
            
            .card-body {
                padding: 24px 20px;
            }
            
            .wallet-info-item, .transaction-history-container {
                padding: 20px;
                margin-bottom: 16px;
            }
            
            .btn-success, .quick-amount {
                padding: 10px 20px;
                font-size: 13px;
                margin-bottom: 8px;
                width: 100%;
            }
            
            .table td, .table th {
                font-size: 12px;
                padding: 10px;
            }
            
            .pagination .page-link {
                padding: 6px 12px;
                font-size: 12px;
            }
        }
        
        /* Animations */
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        .card, .wallet-info-item, .transaction-history-container {
            animation: fadeInUp 0.6s ease;
        }
        
        .dashboard-menu {
            animation: fadeInUp 0.6s ease 0.2s both;
        }
    </style>
</head>
<body>
    <main class="main">
        <div class="page-header breadcrumb-wrap">
            <div class="container">
                <div class="breadcrumb">
                    <a href="/" rel="nofollow">Home</a>
                    <span>/</span> Profile <span>/</span> Wallet
                </div>
            </div>
        </div>
        
        <section class="pt-5 pb-4">
            <div class="container">
                <div class="row">
                    <div class="col-12">
                        <!-- Mobile Menu Toggle Button -->
                        <button class="mobile-menu-toggle" id="toggleMenu">
                            <span>Menu</span>
                            <i class="fas fa-bars"></i>
                        </button>
                        
                        <div class="row">
                            <!-- Sidebar Menu -->
                            <div class="col-lg-3 col-md-4">
                                <div class="dashboard-menu" id="sidebarMenu">
                                    <ul class="nav flex-column">
                                        <li class="nav-item">
                                            <a class="nav-link" href="/my-profile">
                                                <i class="fas fa-tachometer-alt"></i> Dashboard
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link" href="/myAddress">
                                                <i class="fas fa-map-marker-alt"></i> My Address
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link" href="/orders">
                                                <i class="fas fa-shopping-bag"></i> Orders
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link active" href="/wallet">
                                                <i class="fas fa-wallet"></i> Wallet
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link" href="/referrals">
                                                <i class="fas fa-user-plus"></i> Referrals
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link" href="/logout">
                                                <i class="fas fa-sign-out-alt"></i> Logout
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                            
                            <!-- Content Area -->
                            <div class="col-lg-9 col-md-8">
                                <div class="dashboard-content">
                                    <div class="card card-green">
                                        <div class="card-header">
                                            <h5 class="mb-0 text-center">Wallet & Transactions</h5>
                                        </div>
                                        <div class="card-body">
                                            <div class="row mb-4">
                                                <div class="col-md-6 mb-3">
                                                    <div class="wallet-info-item">
                                                        <label>Available Balance</label>
                                                        <p>₹<%= wallet.balance ? wallet.balance.toFixed(2) : '0.00' %></p>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="text-center mb-4">
                                                <button class="btn btn-success me-2 mb-2" data-bs-toggle="modal" data-bs-target="#addMoneyModal">
                                                    <i class="fas fa-plus-square me-2"></i>Add Balance
                                                </button>
                                                <button class="btn btn-success mb-2" data-bs-toggle="modal" data-bs-target="#withdrawModal">
                                                    <i class="fas fa-minus-square me-2"></i>Withdraw
                                                </button>
                                            </div>
                                            <div class="transaction-history-container">
                                                <h3>Transaction History</h3>
                                                <div class="table-responsive">
                                                    <table class="table unique-transaction-table">
                                                        <thead>
                                                            <tr>
                                                                <th>Amount</th>
                                                                <th>Purpose</th>
                                                                <th>Date</th>
                                                                <th>Type</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            <% if (transactions && transactions.length > 0) { %>
                                                                <% transactions.forEach((transaction) => { %>
                                                                    <tr>
                                                                        <td>₹<%= transaction?.amount.toFixed(2) %></td>
                                                                        <td><%= transaction.description %></td>
                                                                        <td><%= new Date(transaction.date).toLocaleDateString() %></td>
                                                                        <td>
                                                                            <span class="transaction-status <%= transaction.type === 'credit' ? 'status-credit' : 'status-debit' %>">
                                                                                <%= transaction.type.charAt(0).toUpperCase() + transaction.type.slice(1) %>
                                                                            </span>
                                                                        </td>
                                                                    </tr>
                                                                <% }) %>
                                                            <% } else { %>
                                                                <tr>
                                                                    <td colspan="4" class="text-center">No transactions found</td>
                                                                </tr>
                                                            <% } %>
                                                        </tbody>
                                                    </table>
                                                </div>
                                                <div class="pagination-container d-flex justify-content-center mt-4 mb-4">
                                                    <nav aria-label="Page navigation">
                                                        <ul class="pagination pagination-sm flex-wrap">
                                                            <!-- Previous Button -->
                                                            <% if (currentPage > 1) { %>
                                                                <li class="page-item">
                                                                    <a href="?page=<%= currentPage - 1 %>" class="page-link">&laquo; Previous</a>
                                                                </li>
                                                            <% } else { %>
                                                                <li class="page-item disabled">
                                                                    <span class="page-link">&laquo; Previous</span>
                                                                </li>
                                                            <% } %>
        
                                                            <!-- Page Numbers -->
                                                            <% 
                                                                const maxPagesToShow = 3; // Show up to 3 page numbers at a time
                                                                let startPage = Math.max(1, currentPage - 1);
                                                                let endPage = Math.min(totalPages, currentPage + 1);
        
                                                                // Adjust start and end pages to always show 3 pages (if possible)
                                                                if (endPage - startPage < maxPagesToShow - 1) {
                                                                    if (currentPage <= 2) {
                                                                        endPage = Math.min(totalPages, startPage + maxPagesToShow - 1);
                                                                    } else {
                                                                        startPage = Math.max(1, endPage - maxPagesToShow + 1);
                                                                    }
                                                                }
        
                                                                // Show ellipsis before if startPage > 2
                                                                if (startPage > 2) { %>
                                                                    <li class="page-item">
                                                                        <a href="?page=1" class="page-link">1</a>
                                                                    </li>
                                                                    <li class="page-item disabled">
                                                                        <span class="page-link">...</span>
                                                                    </li>
                                                                <% } else if (startPage === 2) { %>
                                                                    <li class="page-item">
                                                                        <a href="?page=1" class="page-link">1</a>
                                                                    </li>
                                                                <% }
        
                                                                // Render page numbers in the range
                                                                for (let i = startPage; i <= endPage; i++) { %>
                                                                    <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                                                                        <% if (currentPage === i) { %>
                                                                            <span class="page-link"><%= i %></span>
                                                                        <% } else { %>
                                                                            <a href="?page=<%= i %>" class="page-link"><%= i %></a>
                                                                        <% } %>
                                                                    </li>
                                                                <% }
        
                                                                // Show ellipsis after if endPage < totalPages - 1
                                                                if (endPage < totalPages - 1) { %>
                                                                    <li class="page-item disabled">
                                                                        <span class="page-link">...</span>
                                                                    </li>
                                                                    <li class="page-item">
                                                                        <a href="?page=<%= totalPages %>" class="page-link"><%= totalPages %></a>
                                                                    </li>
                                                                <% } else if (endPage === totalPages - 1) { %>
                                                                    <li class="page-item">
                                                                        <a href="?page=<%= totalPages %>" class="page-link"><%= totalPages %></a>
                                                                    </li>
                                                                <% } %>
        
                                                            <!-- Next Button -->
                                                            <% if (currentPage < totalPages) { %>
                                                                <li class="page-item">
                                                                    <a href="?page=<%= currentPage + 1 %>" class="page-link">Next &raquo;</a>
                                                                </li>
                                                            <% } else { %>
                                                                <li class="page-item disabled">
                                                                    <span class="page-link">Next &raquo;</span>
                                                                </li>
                                                            <% } %>
                                                        </ul>
                                                    </nav>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Add Money Modal -->
        <div class="modal fade" id="addMoneyModal" tabindex="-1">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Add Money to Wallet</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <div class="input-group">
                                <span class="input-group-text">₹</span>
                                <input type="number" id="amount" class="form-control form-control-lg w-100 text-center" placeholder="Enter Amount" min="1" step="1" aria-label="Amount to add" />
                            </div>
                            <div id="amount-error-message" class="text-danger mt-1 small" style="display: none; color: red;"></div>
                        </div>
                        <div class="d-flex flex-wrap justify-content-center gap-2 mb-3">
                            <button class="quick-amount" onclick="setAmount(1000)">₹1000</button>
                            <button class="quick-amount" onclick="setAmount(5000)">₹5000</button>
                            <button class="quick-amount" onclick="setAmount(10000)">₹10000</button>
                            <button class="quick-amount" onclick="setAmount(20000)">₹20000</button>
                        </div>
                    </div>
                    <div class="modal-footer d-flex justify-content-between">
                        <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-success" id="payButton" onclick="addMoney()">Proceed to Pay</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Withdraw Money Modal -->
        <div class="modal fade" id="withdrawModal" tabindex="-1">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Withdraw Money</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="withdrawAmount" class="form-label small mb-1">Enter Amount to Withdraw</label>
                            <div class="input-group">
                                <span class="input-group-text">₹</span>
                                <input type="number" id="withdrawAmount" class="form-control w-100" min="1" step="0.01" placeholder="0.00" aria-label="Amount to withdraw" />
                            </div>
                            <div id="withdraw-error-message" class="text-danger mt-1 small" style="display: none; color: red;"></div>
                        </div>
                    </div>
                    <div class="modal-footer d-flex justify-content-between">
                        <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-success" id="withdrawButton">Withdraw</button>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <!-- Footer -->
    <footer>
        <div class="container">
            <p>&copy; <%= new Date().getFullYear() %> Your Company. All rights reserved.</p>
        </div>
    </footer>

    <!-- Bootstrap and jQuery JS -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    
    <!-- Custom JS for mobile menu and wallet functionality -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const toggleMenu = document.getElementById('toggleMenu');
            const sidebarMenu = document.getElementById('sidebarMenu');
            
            toggleMenu.addEventListener('click', function() {
                sidebarMenu.classList.toggle('show');
            });
            
            window.addEventListener('resize', function() {
                if (window.innerWidth > 767) {
                    sidebarMenu.classList.remove('show');
                }
            });
            
            document.querySelectorAll('.nav-link').forEach(link => {
                link.addEventListener('click', function(e) {
                    const ripple = document.createElement('span');
                    ripple.classList.add('ripple');
                    this.appendChild(ripple);
                    setTimeout(() => {
                        ripple.remove();
                    }, 600);
                });
            });
        });

        function setAmount(amount) {
            document.getElementById("amount").value = amount;
        }

        async function addMoney() {
            const amount = document.getElementById("amount").value;
            const errorMessageElement = document.getElementById("amount-error-message");
            
            if (!amount || amount <= 0) {
                errorMessageElement.textContent = "Please enter a valid amount.";
                errorMessageElement.style.display = "block";
                return;
            }
            
            errorMessageElement.style.display = "none";
            
            const response = await fetch("/wallet/createOrder", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ amount }),
            });
            
            const order = await response.json();
            
            const options = {
                key: "<%= process.env.RAZORPAY_KEY_ID %>",
                amount: order.amount,
                currency: "INR",
                name: "Leaf Wallet",
                description: "Wallet Top-Up",
                order_id: order.id,
                handler: async function (response) {
                    const verifyRes = await fetch("/wallet/verifyPayment", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({
                            razorpay_order_id: response.razorpay_order_id,
                            razorpay_payment_id: response.razorpay_payment_id,
                            razorpay_signature: response.razorpay_signature,
                            amount: amount,
                        }),
                    });
                    
                    const result = await verifyRes.json();
                    if (result.success) {
                        Swal.fire({
                            title: "Success!",
                            text: "Wallet Recharged Successfully!",
                            icon: "success",
                            confirmButtonText: "OK",
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        Swal.fire({
                            title: "Error!",
                            text: "Payment Verification Failed",
                            icon: "error",
                            confirmButtonText: "Try Again",
                        });
                    }
                },
                prefill: {
                    email: "<%= user.email %>",
                    contact: "<%= user.phone %>",
                },
                theme: { color: "#C8956D" },
            };
            
            const paymentObject = new Razorpay(options);
            paymentObject.open();
        }

        document.getElementById("withdrawButton").addEventListener("click", async () => {
            const amountInput = document.getElementById("withdrawAmount");
            const amount = amountInput.value;
            const errorMsgElement = document.getElementById("withdraw-error-message");
            
            if (!amount || amount < 1) {
                errorMsgElement.textContent = "Please enter a valid amount";
                errorMsgElement.style.display = "block";
                return;
            }
            
            errorMsgElement.style.display = "none";
            
            try {
                const response = await fetch("/wallet/withdrawMoney", {
                    method: "PUT",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ amount }),
                });
                
                const data = await response.json();
                
                if (data.success) {
                    Swal.fire({
                        title: "Success!",
                        text: "Money withdrawn successfully!",
                        icon: "success",
                        confirmButtonText: "OK",
                        timer: 5000,
                        timerProgressBar: true,
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.reload();
                        }
                    });
                } else {
                    Swal.fire({
                        title: "Error!",
                        text: data.message || "Failed to withdraw money. Please try again.",
                        icon: "error",
                        confirmButtonText: "OK",
                        timer: 5000,
                        timerProgressBar: true,
                    });
                }
            } catch (error) {
                console.error("Error:", error);
                Swal.fire({
                    title: "Error!",
                    text: "Failed to withdraw money. Please try again.",
                    icon: "error",
                    confirmButtonText: "OK",
                    timer: 5000,
                    timerProgressBar: true,
                });
            }
        });
    </script>
</body>
</html>
```