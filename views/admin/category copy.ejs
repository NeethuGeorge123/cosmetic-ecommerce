<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <link rel="stylesheet" href="/css/admin-style.css" />
    <link rel="stylesheet" href="/css/category.css" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <style>
        .content {
            padding: 0.5rem 1.5rem 1.5rem; /* Reduced top padding */
            width: 100%;
            box-sizing: border-box;
            display: flex;
            justify-content: center;
            flex-direction: column;
            align-items: center; /* Center content horizontally */
            margin: 0; /* Prevent default margins */
        }

        .content-wrapper {
            width: 100%;
            max-width: 1200px; /* Match category-sections */
            margin: 0 auto; /* Center within content */
        }

        .search-container {
            display: flex;
            justify-content: center; /* Center search box */
            margin: 0 auto 1.25rem; /* No top margin, only bottom */
            width: 100%;
        }

        .search-box {
            width: 100%;
            max-width: 400px; /* Fixed width */
            padding: 0.625rem;
            font-size: 1rem;
            border: 1px solid #ddd;
            border-radius: 8px;
            transition: border-color 0.3s;
            display: block;
            margin: 0 auto; /* Fallback centering */
        }

        .search-box:focus {
            border-color: #007bff;
            outline: none;
        }

        .category-sections {
            max-width: 1200px;
            margin: 0 auto; /* Center the content */
        }

        .category-form {
            background-color: #fff;
            padding: 1.5rem;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
            margin-bottom: 1.5rem;
            width: 100%;
            max-width: 800px; /* Same width as category-table-section */
            margin-left: auto;
            margin-right: auto; /* Center the form */
        }

        .category-form h2 {
            font-size: 1.5rem;
            margin-bottom: 1rem;
            color: #333;
        }

        .category-form label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
        }

        .category-form input,
        .category-form textarea {
            width: 100%;
            padding: 0.625rem;
            font-size: 1rem;
            border: 1px solid #ddd;
            border-radius: 6px;
            margin-bottom: 0.75rem;
            box-sizing: border-box;
        }

        .category-form textarea {
            min-height: 100px;
            resize: vertical;
        }

        .create-category {
            background-color: #28a745;
            color: white;
            padding: 0.625rem 1.25rem;
            border: none;
            border-radius: 6px;
            font-size: 1rem;
            cursor: pointer;
            transition: background-color 0.3s;
            display: block;
            margin: 1rem auto 0; /* Center the button */
        }

        .create-category:hover {
            background-color: #218838;
        }

        .error-message {
            color: #dc3545;
            font-size: 0.875rem;
            display: none;
            margin-bottom: 0.75rem;
        }

        .category-table-section {
            background-color: #fff;
            padding: 1.5rem;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
            width: 100%;
            max-width: 800px; /* Same width as category-form */
            margin-left: auto;
            margin-right: auto; /* Center the table section */
        }

        .category-table-section h2 {
            font-size: 1.5rem;
            margin-bottom: 1rem;
            color: #333;
        }

        .table-wrapper {
            width: 100%;
            overflow-x: auto;
            -webkit-overflow-scrolling: touch;
        }

        .category-table {
            width: 100%;
            border-collapse: collapse;
            font-size: 0.9375rem;
            table-layout: auto;
        }

        .category-table th,
        .category-table td {
            border: 1px solid #eee;
            padding: 0.75rem;
            text-align: left;
            white-space: nowrap;
        }

        .category-table th {
            background-color: #f8f9fa;
            color: #333;
        }

        .category-table tr:nth-child(even) {
            background-color: #f9f9f9;
        }

        .btn-add-offer {
            background-color: #28a745; /* Green for Add Offer */
            color: white;
            padding: 0.375rem 0.75rem;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
            font-size: 0.875rem;
        }

        .btn-add-offer:hover {
            background-color: #218838;
        }

        .btn-remove-offer {
            background-color: #dc3545; /* Red for Remove Offer */
            color: white;
            padding: 0.375rem 0.75rem;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
            font-size: 0.875rem;
        }

        .btn-remove-offer:hover {
            background-color: #c82333;
        }

        .btn-list {
            background-color: #007bff; /* Blue for List */
            color: white;
            padding: 0.375rem 0.75rem;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
            font-size: 0.875rem;
        }

        .btn-list:hover {
            background-color: #0056b3;
        }

        .btn-unlist {
            background-color: #fd7e14; /* Orange for Unlist */
            color: white;
            padding: 0.375rem 0.75rem;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
            font-size: 0.875rem;
        }

        .btn-unlist:hover {
            background-color: #e06b12;
        }

        .btn-edit {
            background-color: #947ef8; /* Purple for Edit */
            color: white;
            padding: 0.375rem 0.75rem;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
            font-size: 0.875rem;
        }

        .btn-edit:hover {
            background-color: #5a32a3;
        }

        .btn-list a,
        .btn-unlist a,
        .btn-edit a {
            color: white;
            text-decoration: none;
            display: block; /* Ensure link fills button */
        }

        .pagination-container {
            margin-top: 1.875rem;
            text-align: center;
        }

        .pagination {
            list-style: none;
            padding: 0;
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: 0.625rem;
        }

        .pagination li {
            display: inline;
        }

        .pagination li a {
            text-decoration: none;
            padding: 0.5rem 0.875rem;
            border-radius: 5px;
            background-color: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
            transition: background-color 0.3s;
            display: inline-block;
        }

        .pagination li a:hover,
        .pagination li.active a {
            background-color: #28a745;
            color: white;
            border-color: #28a745;
        }

        /* Media queries for responsiveness */
        @media (max-width: 768px) {
            .content {
                padding: 0.5rem 1rem 1rem; /* Reduced top padding */
            }
            .content-wrapper {
                max-width: 100%;
            }
            .category-sections {
                max-width: 100%;
            }
            .category-form,
            .category-table-section {
                max-width: 100%; /* Full width on small screens */
                padding: 1rem;
            }
            .search-box {
                max-width: 100%; /* Full width on small screens */
            }
            .category-table {
                font-size: 0.875rem;
            }
            .category-table th,
            .category-table td {
                padding: 0.5rem;
            }
            .create-category,
            .btn-add-offer,
            .btn-remove-offer,
            .btn-list,
            .btn-unlist,
            .btn-edit {
                padding: 0.3125rem 0.625rem;
                font-size: 0.75rem;
            }
            .pagination li a {
                padding: 0.375rem 0.75rem;
                font-size: 0.875rem;
            }
        }

        @media (max-width: 576px) {
            .category-form h2,
            .category-table-section h2 {
                font-size: 1.25rem;
            }
            .category-table {
                font-size: 0.75rem;
            }
            .category-table th,
            .category-table td {
                padding: 0.375rem;
            }
            .create-category,
            .btn-add-offer,
            .btn-remove-offer,
            .btn-list,
            .btn-unlist,
            .btn-edit {
                padding: 0.25rem 0.5rem;
                font-size: 0.6875rem;
            }
            .search-box {
                font-size: 0.875rem;
                padding: 0.5rem;
            }
            .pagination li a {
                padding: 0.25rem 0.625rem;
                font-size: 0.75rem;
            }
        }
    </style>
</head>
<%- include('../partials/admin/header') %>
<main class="content">
    <div class="content-wrapper">
        <div class="search-container">
            <input type="text" class="search-box" placeholder="Search Categories..." onkeyup="filterCategories()" />
        </div>

        <div class="category-sections">
            <section class="category-form">
                <h2>Create Category</h2>
                <form method="post" action="/admin/addCategory" onsubmit="return handleFormSubmit(event)">
                    <label for="category-name">Name:</label>
                    <input type="text" id="category-name" name="name" placeholder="Enter category name" />
                    <span class="error-message" id="name-error"></span>

                    <label for="category-description">Description:</label>
                    <textarea id="category-description" name="description"
                        placeholder="Enter category description"></textarea>
                    <span class="error-message" id="description-error"></span>

                    <button class="create-category">Create Category</button>
                </form>
            </section>

            <section class="category-table-section">
                <h2>Category List</h2>
                <div class="table-wrapper">
                    <table class="category-table">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Description</th>
                                <th>Offer Price</th>
                                <th>Offer</th>
                                <th>Status</th>
                                <th>List/Unlist</th>
                                <th>Edit</th>
                            </tr>
                        </thead>
                        <tbody id="category-table-body">
                            <% cat.reverse().forEach(function(category, index) { %>
                            <tr>
                                <td><%= category.name %></td>
                                <td><%= category.description %></td>
                                <td>
                                    <% if(category.categoryOffer) { %>
                                    <%= category.categoryOffer %>
                                    <% } else { %>
                                    0%
                                    <% } %>
                                </td>
                                <td>
                                    <% if(category.categoryOffer === 0) { %>
                                    <button class="btn-add-offer" onclick="addOffer('<%= category._id %>')">Add Offer</button>
                                    <% } else { %>
                                    <button class="btn-remove-offer" onclick="removeOffer('<%= category._id %>')">Remove</button>
                                    <% } %>
                                </td>
                                <td>
                                    <% if(category.isListed) { %>
                                    <span>Listed</span>
                                    <% } else { %>
                                    <span>Unlisted</span>
                                    <% } %>
                                </td>
                                <td>
                                    <% if(category.isListed) { %>
                                    <button class="btn-unlist">
                                        <a href="/admin/listCategory?id=<%= category._id%>">Unlist</a>
                                    </button>
                                    <% } else { %>
                                    <button class="btn-list">
                                        <a href="/admin/unlistCategory?id=<%= category._id%>">List</a>
                                    </button>
                                    <% } %>
                                </td>
                                <td>
                                    <button class="btn-edit"><a href="/admin/editCategory?id=<%= category._id%>">Edit</a></button>
                                </td>
                            </tr>
                            <% }); %>
                        </tbody>
                    </table>
                </div>
                <div class="pagination-container">
                    <ul class="pagination">
                        <% if (currentPage> 1) { %>
                        <li><a href="?page=<%= currentPage - 1 %>">Previous</a></li>
                        <% } %>
                        <% for (let i=1; i <=totalPages; i++) { %>
                        <li class="<%= currentPage === i ? 'active' : '' %>">
                            <a href="?page=<%= i %>">
                                <%= i %>
                            </a>
                        </li>
                        <% } %>
                        <% if (currentPage < totalPages) { %>
                        <li><a href="?page=<%= currentPage + 1 %>">Next</a></li>
                        <% } %>
                    </ul>
                </div>
            </section>
        </div>
    </div>
</main>

<script>
    function filterCategories() {
        let input = document.querySelector(".search-box").value.toLowerCase();
        let rows = document.querySelectorAll("#category-table-body tr");

        rows.forEach(row => {
            let name = row.cells[0].innerText.toLowerCase();
            let description = row.cells[1].innerText.toLowerCase();

            if (name.includes(input) || description.includes(input)) {
                row.style.display = "";
            } else {
                row.style.display = "none";
            }
        });
    }

    function handleFormSubmit(event) {
        event.preventDefault();
        if (!validateForm()) {
            return;
        }
        const name = document.getElementsByName("name")[0].value;
        const description = document.getElementById("category-description").value;
        fetch("/admin/addCategory", {
            method: "POST",
            headers: {
                "content-type": "application/json",
            },
            body: JSON.stringify({ name, description }),
        })
            .then((response) => {
                if (!response.ok) {
                    return response.json().then((err) => {
                        throw new Error(err.error);
                    });
                }
            })
            .catch((error) => {
                if (error.message === "Category already exist") {
                    Swal.fire({
                        icon: "error",
                        title: "OOPs",
                        text: "Category already exists",
                    });
                } else {
                    Swal.fire({
                        icon: "error",
                        title: "OOPs",
                        text: "An error occurred when while adding the category",
                    });
                }
            });
    }

    function validateForm() {
        clearErrorMessages();
        const name = document.getElementsByName("name")[0].value.trim();
        const description = document.getElementById("category-description").value.trim();
        isValid = true;

        if (name === "") {
            displayErrorMessage("name-error", "please enter a name");
            isValid = false;
        } else if (!/^[a-zA-Z\s]+$/.test(name)) {
            displayErrorMessage(
                "name-error",
                "Category name should contain only alphabetic characters"
            );
            isValid = false;
        }else if (/^\d+$/.test(name)){
            displayErrorMessage("name-error", "only numbers are not allowed"); 
        }else if (/^\s+$/.test(name)){
            displayErrorMessage("name-error", "space only please enter a category");
        }
        if (description === "" || /^\s+$/.test(description) || /^\d+$/.test(description)) {
            displayErrorMessage("description-error", "Please enter a valid description");
            isValid = false;
        }
        return isValid;
    }

    function displayErrorMessage(elementId, message) {
        var errorElement = document.getElementById(elementId);
        errorElement.innerText = message;
        errorElement.style.display = "block";
    }

    function clearErrorMessages() {
        const errorElement = document.getElementsByClassName("error-message");
        Array.from(errorElement).forEach((element) => {
            element.innerText = "";
            element.style.display = "none";
        });
    }

    async function addOffer(categoryId) {
        const { value: amount } = await Swal.fire({
            title: "Offer in percentage",
            input: "number",
            inputLabel: "Percentage",
            inputPlaceholder: "%"
        });

        if (amount) {
            try {
                const response = await fetch("/admin/addCategoryOffer", {
                    method: "POST",
                    headers: {
                        'content-type': "application/json",
                    },
                    body: JSON.stringify({
                        percentage: amount,
                        categoryId: categoryId,
                    }),
                });
                const data = await response.json();
                if (response.ok && data.status === true) {
                    Swal.fire(
                        "Offer added",
                        "The offer has been added",
                        "success"
                    ).then(() => {
                        location.reload();
                    });
                } else {
                    Swal.fire("Failed", data.message || "Adding Offer failed", "error");
                }
            } catch (error) {
                Swal.fire(
                    "Error",
                    "An error occurred while adding the offer",
                    "error"
                );
                console.log("Error adding offer", error);
            }
        }
    }

    async function removeOffer(categoryId) {
        try {
            const response = await fetch("/admin/removeCategoryOffer", {
                method: "POST",
                headers: {
                    "content-type": "application/json",
                },
                body: JSON.stringify({
                    categoryId: categoryId,
                })
            });

            const data = await response.json();

            if (response.ok && data.status === true) {
                Swal.fire(
                    "Offer removed",
                    "The offer has been removed",
                    "success"
                ).then(() => {
                    location.reload();
                });
            } else {
                Swal.fire("Failed", data.message || "Removing offer failed", "error");
            }
        } catch (error) {
            Swal.fire(
                "Error",
                "An error while removing the offer",
                "error"
            );
            console.error("Error removing offer", error);
        }
    }
</script>
</html>