<%- include('../partials/admin/header') %>
<head>
   <style>
      
/* General styling */
.content-main {
  padding: 20px;
  background-color: #f9f9f9;
  max-width: 1200px; /* Maintain increased width */
  margin: 0 auto; /* Center horizontally */
  display: flex; /* Use flexbox for centering */
  flex-direction: column; /* Stack children vertically */
  align-items: center; /* Center children horizontally */
  min-height: calc(100vh - 40px); /* Ensure full viewport height minus padding */
}

/* Content title */
.content-title {
  font-size: 24px;
  font-weight: 600;
  margin-bottom: 20px;
  text-align: center; /* Center the title */
}

/* Card styling */
.card {
  background-color: #fff;
  border: 1px solid #e5e5e5;
  border-radius: 10px;
  padding: 20px;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
}

.card-header h4 {
  font-size: 18px;
  font-weight: 500;
}

.card-body {
  padding: 20px 0;
}

/* Input & select */
.form-control,
.form-select {
  border-radius: 6px;
  padding: 8px 12px;
  font-size: 14px;
  border: 1px solid #ccc;
}

.form-label {
  font-weight: 500;
  margin-bottom: 5px;
  display: block;
}

/* Error messages */
.error-message {
  color: #d9534f;
  font-size: 13px;
  margin-top: 5px;
}

/* Buttons */
button#updatebtn {
  background-color: #28a745;
  color: white;
  padding: 10px 20px;
  margin-top: 15px;
  border: none;
  border-radius: 6px;
  font-size: 14px;
  transition: background 0.3s ease;
}

button#updatebtn:hover {
  background-color: #218838;
}

/* Center the update button container */
.update-btn-container {
  display: flex;
  justify-content: center; /* Center the button horizontally */
  margin-top: 20px; /* Add some spacing above the button */
}

/* Image preview and cropper */
img#imgView1,
img#imgView2,
img#imgView3,
img#imgView4 {
  max-width: 100px;
  max-height: 100px;
  margin-bottom: 10px;
  display: block;
  border: 1px solid #ddd;
  border-radius: 6px;
}

.image-cropper {
  border: 1px dashed #ccc;
  padding: 10px;
  justify-content: space-between;
  gap: 10px;
}

.image-cropper img {
  max-height: 100%;
  max-width: 100%;
  object-fit: contain;
}

.image-cropper button {
  height: 36px;
}

/* Existing images section */
img.rounded {
  border-radius: 6px;
  border: 1px solid #ddd;
}

/* Cross button styling */
.cross-btn {
  background-color: #d9534f;
  color: white;
  border: none;
  border-radius: 4px;
  padding: 4px 8px;
  font-size: 14px;
  margin-left: 8px;
  cursor: pointer;
  line-height: 1;
  transition: background 0.3s ease;
}

.cross-btn:hover {
  background-color: #c9302c;
}

@media (max-width: 768px) {
  .col-lg-4,
  .col-lg-12,
  .col-12 {
    width: 100%;
  }
}

.card.mb-4 {
  width: 100%;
  max-width: 1000px; /* Maintain increased card width */
  margin: 0 auto; /* Center the card */
}

   </style>
   <link rel="stylesheet" href="/css/admin-style.css">
   <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet">
   <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<section class="content-main">
    <div class="row">
        <div class="col-12">
            <div class="content-header">
                <h2 class="content-title">Edit Product</h2>
            </div>
        </div>
        <div class="col-lg-12">
            <div class="card mb-4">
                <div class="card-body">
                    <form method="post" action="/admin/editProduct/<%=product._id%>" enctype="multipart/form-data"
                        onsubmit="return validateForm()">
                        <div class="mb-4">
                            <label for="product_name" class="form-label">Product Name</label>
                            <input type="text" name="productName" value="<%=product.productName%>"
                                class="form-control border" id="product_name">
                            <div id="productName-error" class="error-message"></div>
                        </div>
                        <div class="col-lg-4 mb-4">
                            <label class="form-label">Brand</label>
                            <select class="form-select border" name="brand">
                                <%for(let i=0;i<brand.length;i++){%>
                                    <option value="<%=brand[i].brandName%>" <%= (brand[i].brandName === product.brand) ? 'selected' : '' %>>
                                        <%=brand[i].brandName%>
                                    </option>
                                <%}%>
                            </select>
                            <div id="brand-error" class="error-message"></div>
                        </div>
                        <div class="mb-4">
                            <label class="form-label">Full description</label>
                            <input name="descriptionData" value="<%=product.description%>" class="form-control border"
                                rows="4">
                            <div id="description-error" class="error-message"></div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Regular price</label>
                                    <input placeholder="$" name="regularPrice" type="text"
                                        value="<%=product.regularPrice%>" class="form-control border">
                                    <div id="regularPrice-error" class="error-message"></div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Sale price</label>
                                    <input name="salePrice" type="text" value="<%=product.salePrice%>"
                                        class="form-control border">
                                    <div id="salePrice-error" class="error-message"></div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Quantity</label>
                                    <input name="quantity" type="text" value="<%=product.quantity%>"
                                        class="form-control border">
                                    <div id="quantity-error" class="error-message"></div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Color</label>
                                    <input name="color" type="text" value="<%=product.color%>"
                                        class="form-control border">
                                    <div id="color-error" class="error-message"></div>
                                </div>
                            </div>
                        </div>
                        <div class="card mb-4">
                            <div class="card-body">
                                <div class="row gx-2">
                                    <div class="col-sm-6 mb-3">
                                        <label class="form-label">Category</label>
                                        <select class="form-select border" style="width: 150px;" name="category">
                                            <% for(let i=0; i<cat.length; i++) { %>
                                                <option 
                                                    value="<%=cat[i].name%>" 
                                                    <%= (cat[i].name === product.category.name) ? 'selected' : '' %>
                                                >
                                                    <%=cat[i].name%>
                                                </option>
                                            <% } %>
                                        </select>
                                        <div id="category-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card mb-2">
                            <div class="card-header">
                                <h4>Choose images</h4>
                            </div>
                            <%for(let i=0;i<product.productImage.length;i++){%>
                                <div class="col-md-12">
                                    <div class="mb-4">
                                        <div class="col-12">
                                            <td>
                                                <input type="hidden" value="<%=product.productImage[i]%>" id="imageDatas">
                                                <img class="rounded" style="width: 50px; height: 60px;"
                                                    src="/Uploads/re-image/<%=product.productImage[i]%>"
                                                    alt="">
                                                <button class="cross-btn" onclick="deleteSingleImage('<%=product.productImage[i]%>','<%=product._id%>')">Ã—</button>
                                            </td>
                                        </div>
                                    </div>
                                </div>
                            <%}%>
                            <div class="card-body">
                                <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                    <div class="image-preview-container" id="imagePreview1">
                                        <img src="" alt="" id="imgView1">
                                        <button class="cross-btn" style="display: none;" onclick="deleteNewImage(1, this)">Ã—</button>
                                    </div>
                                    <input class="form-control" type="file" name="images" id="input1"
                                        accept="image/png, image/jpeg, image/jpg"
                                        onchange="viewImage1(event), viewImage(event, 1)">
                                    <div id="images-error" class="error-message"></div>
                                </div>
                                <div class="image-cropper d-flex align-items-center"
                                    style="display:flex; width: 300px; height: 200px; margin-bottom: 20px;">
                                    <img src="" id="croppedImg1" alt="">
                                    <button type="button" id="saveButton1" class="btn-sm btn-primary">Save</button>
                                </div>
                                <div class="row">
                                    <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                        <div class="image-preview-container" id="imagePreview2">
                                            <img src="" alt="" id="imgView2">
                                            <button class="cross-btn" style="display: none;" onclick="deleteNewImage(2, this)">Ã—</button>
                                        </div>
                                        <input class="form-control" type="file" name="images" id="input2"
                                            accept="image/png, image/jpeg, image/jpg"
                                            onchange="viewImage2(event),viewImage(event, 2)">
                                    </div>
                                    <div class="image-cropper d-flex align-items-center"
                                        style="display:flex; width: 300px; height: 200px; margin-bottom: 20px;">
                                        <img src="" id="croppedImg2" alt="">
                                        <button type="button" id="saveButton2" class="btn-sm btn-primary">Save</button>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                        <div class="image-preview-container" id="imagePreview3">
                                            <img src="" alt="" id="imgView3">
                                            <button class="cross-btn" style="display: none;" onclick="deleteNewImage(3, this)">Ã—</button>
                                        </div>
                                        <input class="form-control" type="file" name="images" id="input3"
                                            accept="image/png, image/jpeg, image/jpg"
                                            onchange="viewImage3(event),viewImage(event, 3)">
                                    </div>
                                    <div class="image-cropper d-flex align-items-center"
                                        style="display:flex; width: 300px; height: 200px; margin-bottom: 20px;">
                                        <img src="" id="croppedImg3" alt="">
                                        <button type="button" id="saveButton3" class="btn-sm btn-primary">Save</button>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                        <div class="image-preview-container" id="imagePreview4">
                                            <img src="" alt="" id="imgView4">
                                            <button class="cross-btn" style="display: none;" onclick="deleteNewImage(4, this)">Ã—</button>
                                        </div>
                                        <input class="form-control" type="file" name="images" id="input4"
                                            accept="image/png, image/jpeg, image/jpg"
                                            onchange="viewImage4(event),viewImage(event, 4)">
                                    </div>
                                    <div class="image-cropper d-flex align-items-center"
                                        style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                        <img src="" id="croppedImg4" alt="">
                                        <button type="button" id="saveButton4" class="btn-sm btn-primary">Save</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="update-btn-container">
                            <button class="btn btn-md rounded font-sm hover-up" id="updatebtn"
                                type="button" onclick="validateAndSubmit()">Update</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
function validateAndSubmit() {
    if (validateForm()) {
        document.forms[0].submit();
    }
}

function validateForm() {
    let imageDatas = false;
    console.log("validate form");
    clearErrorMessages();
    const name = document.getElementsByName('productName')[0].value;
    const description = document.getElementsByName('descriptionData')[0].value;
    const brand = document.getElementsByName('brand')[0].value;
    const price = document.getElementsByName('regularPrice')[0].value;
    const saleprice = document.getElementsByName('salePrice')[0].value;
    const color = document.getElementsByName('color')[0].value;
    const category = document.getElementsByName('category')[0].value;
    const images = document.getElementById('input1');
    const quantity = document.getElementsByName('quantity')[0].value;
    imageDatas = document.getElementById("imageDatas")?.value;
    let isValid = true;    
    if (name.trim() === "") {
        displayErrorMessage('productName-error', 'Please enter a product name.');
        isValid = false;
    }else if (!/[A-Za-z0-9]/.test(name)) {
    // Contains only special characters (no letters or numbers)
    displayErrorMessage('productName-error', 'Product name should not contain only special characters.');
    isValid = false;
}

if (description.trim() === '') {
    displayErrorMessage('description-error', 'Please enter a product description.');
    isValid = false;
} else if (/^\d+$/.test(description)) {
    displayErrorMessage('description-error', 'Description should not contain only numbers.');
    isValid = false;
} else if (!/[A-Za-z0-9]/.test(description)) {
    // Contains only special characters (no letters or numbers)
    displayErrorMessage('description-error', 'Description should not contain only special characters.');
    isValid = false;
}

    if (parseInt(quantity) < 0 || quantity.trim() === "" || isNaN(quantity)) {
        displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
        isValid = false;
    }
    if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) <= 0) {
        displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
        isValid = false;
    }
    if (!/^\d+(\.\d{1,2})?$/.test(saleprice) || parseFloat(saleprice) <= 0) {
        displayErrorMessage('salePrice-error', 'Please enter a valid non-negative price.');
        isValid = false;
    }
    if (parseInt(saleprice) > parseInt(price)) {
        displayErrorMessage('salePrice-error', 'Sale price should be less than regular price');
        isValid = false;
    }
    if (color.trim() === "" || !/^[A-Za-z\s]+$/.test(color)) {
        displayErrorMessage('color-error', 'Please enter a valid color.');
        isValid = false;
    }
    const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];

if ((!imageDatas || imageDatas.length === 0) && images.files.length === 0) {
    displayErrorMessage("images-error", 'Please select an image.');
    isValid = false;
} else {
    for (let i = 0; i < images.files.length; i++) {
        const file = images.files[i];
        if (!allowedTypes.includes(file.type)) {
            displayErrorMessage("images-error", 'Only image files (jpg, jpeg, png, webp) are allowed.');
            isValid = false;
            break;
        }
    }
}

    return isValid;
}

function displayErrorMessage(elementId, message) {
    var errorElement = document.getElementById(elementId);
    errorElement.innerText = message;
    errorElement.style.display = "block";
}

function clearErrorMessages() {
    const errorElements = document.getElementsByClassName('error-message');
    Array.from(errorElements).forEach(element => {
        element.innerText = '';
    });
}

function viewImage1(event) {
    const img = document.getElementById('imgView1');
    img.src = URL.createObjectURL(event.target.files[0]);
    document.querySelector('#imagePreview1 .cross-btn').style.display = 'inline-block';
}

function viewImage2(event) {
    const img = document.getElementById('imgView2');
    img.src = URL.createObjectURL(event.target.files[0]);
    document.querySelector('#imagePreview2 .cross-btn').style.display = 'inline-block';
}

function viewImage3(event) {
    const img = document.getElementById('imgView3');
    img.src = URL.createObjectURL(event.target.files[0]);
    document.querySelector('#imagePreview3 .cross-btn').style.display = 'inline-block';
}

function viewImage4(event) {
    const img = document.getElementById('imgView4');
    img.src = URL.createObjectURL(event.target.files[0]);
    document.querySelector('#imagePreview4 .cross-btn').style.display = 'inline-block';
}

function deleteNewImage(index, buttonElement) {
    const input = document.getElementById('input' + index);
    const img = document.getElementById('imgView' + index);
    const cropperContainer = document.querySelector('#croppedImg' + index).parentNode;
    const deleteButton = buttonElement;
    
    // If the image has been uploaded to a temporary server location, send AJAX request
    if (input.files.length > 0) {
        const fileName = input.files[0].name;
        $.ajax({
            url: "/admin/deleteTempImage",
            method: "post",
            data: { imageNameToServer: fileName, productIdToServer: '<%=product._id%>' },
            success: function(response) {
                if (response.status === true) {
                    // Clear the file input
                    input.value = '';
                    // Clear the preview image
                    img.src = '';
                    // Hide the cropper container
                    cropperContainer.style.display = 'none';
                    // Hide the delete button
                    deleteButton.style.display = 'none';
                } else {
                    console.error("Failed to delete temporary image:", response.message);
                    displayErrorMessage('images-error', 'Failed to delete image. Please try again.');
                }
            },
            error: function(xhr, status, error) {
                console.error("AJAX error:", error);
                displayErrorMessage('images-error', 'Error deleting image. Please try again.');
            }
        });
    } else {
        // If no server-side image, just clear client-side
        input.value = '';
        img.src = '';
        cropperContainer.style.display = 'none';
        deleteButton.style.display = 'none';
    }
}

function viewImage(event, index) {
    let input = event.target;
    let reader = new FileReader();
    reader.onload = function () {
        let dataURL = reader.result;
        let image = document.getElementById('imgView' + index);
        image.src = dataURL;
        let cropper = new Cropper(image, {
            aspectRatio: 1,
            viewMode: 1,
            guides: true,
            background: false,
            autoCropArea: 1,
            zoomable: true
        });
        let cropperContainer = document.querySelector('#croppedImg' + index).parentNode;
        cropperContainer.style.display = 'block';
        let saveButton = document.querySelector('#saveButton' + index);
        saveButton.addEventListener('click', async function () {
            let croppedCanvas = cropper.getCroppedCanvas();
            let croppedImage = document.getElementById("croppedImg" + index);
            croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);
            let timestamp = new Date().getTime();
            let fileName = `cropped-img-${timestamp}-${index}.png`;
            await croppedCanvas.toBlob(blob => {
                let input = document.getElementById('input' + index);
                let imgFile = new File([blob], fileName, blob);
                const fileList = new DataTransfer();
                fileList.items.add(imgFile);
                input.files = fileList.files;
            });
            cropperContainer.style.display = 'none';
        });
    };
    reader.readAsDataURL(input.files[0]);
}

function deleteSingleImage(imageId, productId) {
    console.log("IMageid:",imageId)
    $.ajax({
        url: "/admin/deleteImage",
        method: "post",
        data: { imageNameToServer: imageId, productIdToServer: productId },
        success: ((response) => {
            if (response.status === true) {
                window.location.reload();
            } else {
                console.error("Failed to delete image:", response.message);
                displayErrorMessage('images-error', 'Failed to delete image. Please try again.');
            }
        }),
        error: function(xhr, status, error) {
            console.error("AJAX error:", error);
            displayErrorMessage('images-error', 'Error deleting image. Please try again.');
        }
    });
}
</script>