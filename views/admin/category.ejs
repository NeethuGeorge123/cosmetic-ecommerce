<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <link rel="stylesheet" href="/css/admin-style.css" />
    <link rel="stylesheet" href="/css/category.css" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

</head>
 <%- include('../partials/admin/header') %> 
<main class="content">
    <div class="search-container">
        <input type="text" class="search-box" placeholder="Search Categories..." />
    </div>

    <div class="category-sections">
        <section class="category-form">
            <h2>Create Category</h2>
            <form method="post" action="/admin/addCategory" onsubmit="return handleFormSubmit(event)">
                <label for="category-name">Name:</label>
                <input type="text" id="category-name" name="name" placeholder="Enter category name" />
                <span class="error-message" id="name-error"></span>

                <label for="category-description">Description:</label>
                <textarea id="category-description" name="description"
                    placeholder="Enter category description"></textarea>
                <span class="error-message" id="description-error"></span>

                <button class="create-category">Create Category</button>
            </form>
        </section>

        <section class="category-table-section">
            <h2>Category List</h2>
            <table class="category-table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Description</th>
                        <th>Offer Price</th>
                        <th>Offer </th>
                        <th>Status</th>
                        <th>List/Unlist</th>
                        <th>Edit</th>
                    </tr>
                </thead>
                <!-- <tbody> -->

                <!-- Categories will be dynamically loaded here -->
                <tbody id="category-table-body">
                    

                        <% cat.reverse().forEach(function(category, index) { %>    
                          
                            <tr>
                                <td><%= category.name %></td>
                                <td><%= category.description %></td>
                                <!-- <td>
                                    <button class="btn-offer" onclick="handleAddOffer('<%= category._id %>')">Add Offer</button>
                                    <button class="btn-remove" onclick="handleRemoveOffer('<%= category._id %>')">Remove</button>
                                </td> -->
                                <td>
                                  <% if(category.categoryOffer) { %>
                                    <%= category.categoryOffer %>
                                    <% }else{ %>
                                        0%

                                <% } %>
                                </td>
                                <td>
                                    <% if(category.categoryOffer===0){%>
                                    
                                    <button class="btn-list-unlist" onclick="addOffer('<%= category._id %>')">Add Offer

                                    </button>
                                    <% }else{%>
                                    <button class="btn-list-unlist" onclick="removeOffer('<%= category._id %>')">
                                       
                                        REMOVE
                                       </button>
                                       <% } %>
                                    
                                </td>
                                <td>
                                    <% if(category.isListed){ %>                          
                                            <span>Listed</span> 

                                   <% } else { %>
                                    <span>Unlisted</span>

                                    <% } %>
                                </td>
                                <td>
                                    <% if(category.isListed) { %>
                                    <button class="btn-list-unlist" >
                                        <a href="/admin/listCategory?id=<%= category._id%>">Unlist</a>
                                    </button>
                                    <% } else { %>
                                    <button class="btn-list-unlist" >
                                        <a href="/admin/unlistCategory?id=<%= category._id%>">List  </a>
                                    </button>
                                    <% } %>
                                     
                                </td>
                                <td>
                                    <button class="btn-edit" ><a href="/admin/editCategory?id=<%= category._id%>">Edit</a> </button>
                                </td>
                            </tr>
                            <% }); %>
                </tbody>

                <!-- </tbody> -->
            </table>
            <!--pagination code-->
            <div class="pagination-container">
                <ul class="pagination">
                    <% if (currentPage> 1) { %>
                        <li><a href="?page=<%= currentPage - 1 %>">Previous</a></li>
                        <% } %>
                            <% for (let i=1; i <=totalPages; i++) { %>
                                <li class="<%= currentPage === i ? 'active' : '' %>">
                                    <a href="?page=<%= i %>">
                                        <%= i %>
                                    </a>
                                </li>
                                <% } %>
                                    <% if (currentPage < totalPages) { %>
                                        <li><a href="?page=<%= currentPage + 1 %>">Next</a></li>
                                        <% } %>
                </ul>
            </div>
        </section>
    </div>
</main>

<script>
    function handleFormSubmit(event) {
        event.preventDefault();
        if (!validateForm()) {
            return;
        }
        const name = document.getElementsByName("name")[0].value;
        const description = document.getElementById("category-description").value;
        fetch("/admin/addCategory", {
            method: "POST",
            headers: {
                "content-type": "application/json",
            },
            body: JSON.stringify({ name, description }),
        })
            .then((response) => {
                if (!response.ok) {
                    return response.json().then((err) => {
                        throw new Error(err.error);
                    });
                }
            })
            .catch((error) => {
                if (error.message === "Category already exist") {
                    Swal.fire({
                        icon: "error",
                        title: "OOPs",
                        text: "Category already exists",
                    });
                } else {
                    Swal.fire({
                        icon: "error",
                        title: "OOPs",
                        text: "An error occured when while adding the category",
                    });
                }
            });
    }

    function validateForm() {
        clearErrorMessages();
        const name = document.getElementsByName("name")[0].value.trim();
        const description = document
            .getElementById("category-description")
            .value.trim();
        isValid = true;

        if (name === "") {
            displayErrorMessage("name-error", "please enter a name");
            isValid = false;
        } else if (!/^[a-zA-Z\s]+$/.test(name)) {
            displayErrorMessage(
                "name-error",
                "Category name should contain only alphabetic characters"
            );
            isValid = false;
        }
        if (description === "") {
            displayErrorMessage("description-error", "Please enter a description");
            isValid = false;
        }
        return isValid;
    }

    function displayErrorMessage(elementId, message) {
        var errorElement = document.getElementById(elementId);
        errorElement.innerText = message;
        errorElement.style.display = "block";
    }

    function clearErrorMessages() {
        const errorElement = document.getElementsByClassName("error-message");
        Array.from(errorElement).forEach((element) => {
            element.innerText = "";
            element.style.display = "none";
        });
    }

async function addOffer(categoryId){
    const {value:amount}=await Swal.fire({
        title:"Offer in percentage",
        input:"number",
        inputLabel:"Percentage",
        inputPlaceholder:"%"
    });


    if(amount){
        try {
            const response=await fetch("/admin/addCategoryOffer",{
                method:"POST",
                headers:{
                    'content-type':"application/json",

                },
                body:JSON.stringify({
                    percentage:amount,
                    categoryId:categoryId,
                }),
            })
            const data=await response.json();
            if(response.ok && data.status===true){
                Swal.fire(
                    "Offer added",
                    "The offer has been added",
                    "success"
            ).then(()=>{
                    location.reload();
                });
            }else{
                Swal.fire("Failed",data.message || "Adding Offer failed","error")
            }



        } catch (error) {
            Swal.fire(
                "Error",
                "An error occured while adding the offer",
                "error"
        );
            console.log("Error adding offer",error)
        }
    }
}

async function removeOffer(categoryId){
    try {
        const response=await fetch("/admin/removeCategoryOffer",{
            method:"POST",
            headers:{
                "content-type":"application/json",
            },
            body:JSON.stringify({
                categoryId:categoryId, 
            })
        })

        const  data=await response.json();

        if(response.ok && data.status===true){
            Swal.fire(
                "Offer removed",
                "The offer has been removed",
                "success"

            ).then(()=>{
                location.reload();

            })
        }else{
            Swal.fire("Failed",data.message || "Removing offer failed","error")
        }

    } catch (error) {
        Swal.fire(
            "Error",
            "An error while removing the offer",
            "error"
        );
        console.error("Error removing offer",error)
    }
}


</script>

</html>